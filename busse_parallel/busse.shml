<?xml version='1.0' encoding='utf-8'?>
<harness_options>
  <length>
    <string_value lines="1">long</string_value>
  </length>
  <owner>
    <string_value lines="1">mspieg</string_value>
  </owner>
  <description>
    <string_value lines="1">Busse 1a benchmark.</string_value>
  </description>
  <simulations>
    <simulation name="Busse">
      <input_file>
        <string_value lines="1" type="filename">busse.tfml</string_value>
      </input_file>
      <run_when name="input_changed_or_output_missing"/>
      <parameter_sweep>
        <parameter name="ncells">
          <values>
            <string_value lines="1">4 8</string_value>
          </values>
          <process_scale>
            <integer_value shape="2" rank="1">1 4</integer_value>
          </process_scale>
        </parameter>
        <parameter name="ntimesteps">
          <values>
            <string_value lines="1">10</string_value>
          </values>
          <update>
            <string_value type="code" lines="20" language="python">import libspud
libspud.set_option("/timestepping/number_timesteps", int(ntimesteps))</string_value>
            <single_build/>
          </update>
        </parameter>
      </parameter_sweep>
      <dependencies>
        <run name="Mesh">
          <input_file>
            <string_value lines="1" type="filename">transfinite_box.geo</string_value>
          </input_file>
          <run_when name="input_changed_or_output_missing"/>
          <parameter_sweep>
            <parameter name="ncells">
              <update>
                <string_value lines="20" type="code" language="python">from string import Template as template
input_file = template(input_file).safe_substitute({'ncells':ncells, 'factor':'0.01',
'xaspect':'1.0079','yaspect':'0.6283'})</string_value>
              </update>
            </parameter>
          </parameter_sweep>
          <required_output>
            <filenames name="meshfiles">
              <python>
                <string_value lines="20" type="code" language="python">meshfiles = ["transfinite_box.xml"]</string_value>
              </python>
            </filenames>
          </required_output>
          <commands>
            <command name="GMsh">
              <string_value lines="1">gmsh -3 transfinite_box.geo</string_value>
            </command>
            <command name="Convert">
              <string_value lines="1">dolfin-convert transfinite_box.msh transfinite_box.xml</string_value>
            </command>
          </commands>
        </run>
      </dependencies>
      <variables>
        <variable name="walltime">
          <string_value lines="20" type="code" language="python">import libspud
from buckettools.statfile import parser

libspud.load_options("busse.tfml")
ioname = libspud.get_option("/io/output_base_name")
libspud.clear_options()

stat = parser(ioname+".stat")

walltime = stat["ElapsedWallTime"]["value"][-1]</string_value>
        </variable>
      </variables>
    </simulation>
  </simulations>
  <tests>
    <test name="walltime">
      <string_value lines="20" type="code" language="python">ncells = walltime.parameters['ncells']
slice = {'ncells': ncells}
print 'walltime =',[ walltime[slice][i] for i in range(len(ncells)) ]</string_value>
    </test>
  </tests>
</harness_options>
